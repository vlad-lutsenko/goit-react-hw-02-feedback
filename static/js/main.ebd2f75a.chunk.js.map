{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statisticsList","statisticsListItem","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","name","onClick","optionBtn","Section","title","children","Notification","message","App","state","changeHandler","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,mBAAqB,yC,kKCkC5EC,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,wBAAIC,UAAWC,IAAOC,gBACpB,wBAAIF,UAAWC,IAAOE,oBACpB,oCADF,IACgBR,GAEhB,wBAAIK,UAAWC,IAAOE,oBACpB,uCADF,IACmBP,GAEnB,wBAAII,UAAWC,IAAOE,oBACpB,mCADF,IACeN,GAEf,wBAAIG,UAAWC,IAAOE,oBACpB,qCADF,IACiBL,GAEjB,wBAAIE,UAAWC,IAAOE,oBACpB,mDACCJ,EAFH,O,gBCQSK,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,4BACEC,KAAK,SACLC,KAAMF,EACNA,IAAKA,EACLG,QAASP,EACTN,UAAWC,IAAOa,WAEjBJ,QCDIK,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICKUC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,ICyDEC,E,4MAtDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,cAAgB,SAACC,GACf,IAAMX,EAAOW,EAAEC,OAAOZ,KACtB,EAAKa,UAAS,SAACJ,GAAD,sBACXT,EAAOS,EAAMT,GAAQ,O,EAI1Bc,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjB1B,KADiB,EACXC,QADW,EACFC,K,EAIzB8B,gCAAkC,WAChC,OAAK,EAAKN,MAAM1B,KAITiC,KAAKC,MAAyB,IAAlB,EAAKR,MAAM1B,KAAc,EAAK+B,sBAHxC,G,uDAMD,IAAD,EACwBI,KAAKT,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASmB,MAAM,yBACb,kBAAC,EAAD,CACEX,QAASyB,KAAKT,MACdf,gBAAiBwB,KAAKR,iBAG1B,kBAAC,EAAD,CAASN,MAAM,cACZc,KAAKJ,qBACJ,kBAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,KAAKJ,qBACZ3B,mBAAoB+B,KAAKH,oCAG3B,kBAAC,EAAD,CAAcR,QAAQ,4B,GA/ChBY,aCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCP1B5C,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.ebd2f75a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2ebhw\",\"statisticsListItem\":\"Statistics_statisticsListItem__17Xdi\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={styles.statisticsList}>\r\n      <li className={styles.statisticsListItem}>\r\n        <b>Good:</b> {good}\r\n      </li>\r\n      <li className={styles.statisticsListItem}>\r\n        <b>Neutral:</b> {neutral}\r\n      </li>\r\n      <li className={styles.statisticsListItem}>\r\n        <b>Bad:</b> {bad}\r\n      </li>\r\n      <li className={styles.statisticsListItem}>\r\n        <b>Total:</b> {total}\r\n      </li>\r\n      <li className={styles.statisticsListItem}>\r\n        <b> Positive feedback: </b>\r\n        {positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((key) => (\r\n        <button\r\n          type=\"button\"\r\n          name={key}\r\n          key={key}\r\n          onClick={onLeaveFeedback}\r\n          className={styles.optionBtn}\r\n        >\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeHandler = (e) => {\n    const name = e.target.name;\n    this.setState((state) => ({\n      [name]: state[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (!this.state.good) {\n      return 0;\n    }\n\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.changeHandler}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionBtn\":\"FeedbackOptions_optionBtn__dV3SY\"};"],"sourceRoot":""}